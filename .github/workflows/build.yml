name: Gradle Build

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+-rc.[1-9][0-9]*'
  workflow_dispatch:

jobs:
  build:
    name: "Build with Gradle"
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
      id-token: write
      attestations: write

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Fetch tags
      if: github.ref == 'refs/heads/main'
      run: git fetch --tags

    - uses: gradle/actions/wrapper-validation@v4

    - uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: zulu
        cache: gradle

    - uses: github/codeql-action/init@v3
      with:
        languages: java-kotlin

    - uses: github/codeql-action/init@v3
      with:
        languages: actions

    - uses: gradle/actions/setup-gradle@v4

    - name: Extract GitHub API Version
      id: api-version
      run: echo "version=$(grep 'github.api.version' gradle.properties | cut -d'=' -f2)" >> $GITHUB_OUTPUT

    - name: Cache Downloaded Schemas
      id: schema-cache
      uses: actions/cache@v4
      with:
        path: |
          */build/generated/resources/main/schema.json
          */build/resources/main/schema.graphqls
        key: schema-cache-${{ steps.api-version.outputs.version }}

    - name: Build Codegen
      if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/v')
      run: ./gradlew --project-dir gradle/pulpogato-rest-codegen check pitest

    - name: Build Main Project
      if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/v')
      run: ./gradlew build :pulpogato-rest-fpt:pitest --max-workers=2 --continue

    - name: Build Snapshot
      if: github.ref == 'refs/heads/main'
      env:
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
      run: ./gradlew build snapshot --max-workers=2

    - name: Build Candidate
      if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-rc')
      env:
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
      run: ./gradlew -Prelease.useLastTag=true build candidate --max-workers=2

    - name: Build Final
      if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-rc')
      env:
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
      run: ./gradlew -Prelease.useLastTag=true build final --max-workers=2

    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: github/codeql-action/analyze@v3

    - uses: actions/attest-build-provenance@v2
      if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main'
      with:
        subject-path: 'build/repos/**/*.jar,build/repos/**/*.pom,build/repos/**/*.module'