[versions]
annotations = "26.0.2"
assertj = "3.27.3"
commonmark = "0.24.0"
commons-text = "1.13.0"
dgs = "7.0.3"
download = "5.6.0"
jackson = "2.18.2"
javapoet = "0.6.0"
junit = "5.11.4"
kotlin = "2.1.10"
lombok = "1.18.36"
reflections = "0.10.2"
slf4j = "2.0.16"
spring = "6.2.3"
springBoot = "3.4.2"
swaggerParser = "2.1.25"
waena = "0.10.3"

[libraries]
annotations = { group = "org.jetbrains", name = "annotations", version.ref = "annotations" }
assertj = { group = "org.assertj", name = "assertj-core", version.ref = "assertj" }
commonmark = { group = "org.commonmark", name = "commonmark", version.ref = "commonmark" }
commonmarkTables = { group = "org.commonmark", name = "commonmark-ext-gfm-tables", version.ref = "commonmark" }
commonsText = { group = "org.apache.commons", name = "commons-text", version.ref = "commons-text" }
jacksonCore = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jacksonTime = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "jackson" }
javapoet = { group = "com.palantir.javapoet", name = "javapoet", version.ref = "javapoet" }
junit = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit" }
lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }
reflections = { group = "org.reflections", name = "reflections", version.ref = "reflections" }
slf4j = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
springBootTest = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "springBoot" }
springBootWeb = { group = "org.springframework.boot", name = "spring-boot-starter-web", version.ref = "springBoot" }
springWeb = { group = "org.springframework", name = "spring-web", version.ref = "spring" }
swaggerParser = { group = "io.swagger.parser.v3", name = "swagger-parser", version.ref = "swaggerParser" }

[bundles]
commonmark = [ "commonmark", "commonmarkTables" ]
jackson = ["jacksonCore", "jacksonTime" ]
springBoot = [ "springBootWeb", "springBootTest" ]

[plugins]
dgs = { id = "com.netflix.dgs.codegen", version.ref = "dgs" }
download = { id = "de.undercouch.download", version.ref = "download" }
javaLibrary = { id = "java-library" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
waenaPublished = { id = "com.github.rahulsom.waena.published", version.ref = "waena" }
waenaRoot = { id = "com.github.rahulsom.waena.root", version.ref = "waena" }